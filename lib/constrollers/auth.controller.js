"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.signin=signin,exports.signout=signout,exports.hasAuthorization=hasAuthorization,exports.requireSignin=void 0;var _objectSpread2=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread")),_jsonwebtoken=_interopRequireDefault(require("jsonwebtoken")),_expressJwt=_interopRequireDefault(require("express-jwt")),_user=_interopRequireDefault(require("../models/user.model")),_config=_interopRequireDefault(require("../../config/config")),_user2=require("../utils/user.validator");/**
 * grand access
 * @public
 * @export
 * @path {POST} /api/signin
 * @Request {Request} req HttpRequest object
 */async function signin(a,b){const c=(0,_objectSpread2.default)({},a.body),d=(0,_user2.validateSignin)(c);if(d.errors)return b.status(400).send((0,_objectSpread2.default)({},d));try{const a=await _user.default.findOne({email:c.email});if(!a)return b.status(404).send({message:"user not found! Who do you think this is, BRAH!"});if(!a.authenticate(c.password))return b.status(401).send({message:"Is you play or whats good, yow shit did not match"});const d=_jsonwebtoken.default.sign({_id:a._id},_config.default.jwtSecret);return b.cookie("t",d,{expire:new Date+3e3}),b.status(200).json({token:"Bearer "+d,user:{_id:a._id,name:a.name,email:a.email}})}catch(a){return b.status(500).send({message:"How About if you try to signin later, you just broke me. BRAH!",error:a})}}function signout(a,b){return b.clearCookie("t"),b.status("200").json({message:"signed out"})}const requireSignin=(0,_expressJwt.default)({secret:_config.default.jwtSecret,userProperty:"auth"});exports.requireSignin=requireSignin;function hasAuthorization(a,b,c){const d=a.profile&&a.auth&&a.profile._id===a.auth._id;return d?void c():b.status(403).json({error:"User not authorized"})}