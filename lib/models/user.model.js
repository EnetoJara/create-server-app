"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _mongoose=require("mongoose"),_crypto=_interopRequireDefault(require("crypto"));const UserSchema=new _mongoose.Schema({name:{type:String,trim:!0,required:"Name is required"},email:{type:String,trim:!0,unique:"Email already exists",match:[/.+@.+\..+/,"Please fill a valid email address"],required:"Email is required"},about:{type:String,trim:!0},created:{type:Date,default:Date.now},updated:Date,hashed_password:{type:String,required:"Password is required"},salt:String});UserSchema.virtual("password").set(function(a){this._password=a,this.salt=this.makeSalt(),this.hashed_password=this.encryptPassword(a)}).get(function(){return this._password}),UserSchema.methods={authenticate:function(a){return this.encryptPassword(a)===this.hashed_password},encryptPassword:function(a){if(!a)return"";try{return _crypto.default.createHmac("sha1",this.salt).update(a).digest("hex")}catch(a){return""}},makeSalt:function(){return Math.round(new Date().valueOf()*Math.random())+""}},UserSchema.path("hashed_password").validate(function(){this._password&&6>this._password.length&&this.invalidate("password","Password must bet at least 6 characters long"),this.isNew&&!this._password&&this.invalidate("password","Password is required")},null);var _default=(0,_mongoose.model)("User",UserSchema);exports.default=_default;